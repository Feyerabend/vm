# prime numbers

INIT:
	SETZ
	ST R0		# c = 0
	SET 1
	ST R1		# j = 1

LOOP:
	LDARG 1		# i
	LD R1		# j
	MOD			# i % j
	EQZ			# = 0 ?

	JPZ :NOINC	# jump if = 0 false

	LD R0		# c ->
	INC			# c++
	ST R0		# -> c

NOINC:
	LD R1		# j ->
	INC 		# j++
	ST R1		# -> j

	LD R1		# j
	LDARG 1		# i
	LT			# j < i ?
	JPNZ :LOOP	# true, loop

	LD R1		# j
	LDARG 1 	# i
	EQ			# j = i ?
	JPNZ :LOOP	# true, loop

	LD R0		# c
	SET 2
	EQ			# c = 2 ?
	JPZ :EXIT	# no? exit call

	LDARG 1 	# prime arg
	PRINT		# print

EXIT:
	RET

START:
	SET 99
	STORE R0	# n = 99

	SET 1
	STORE R1	# i = 1

NEXT:
	LOAD R1		# i
	INC			# i++
	DUP			# i i
	STORE R1	# i global reg

	STARG 1 	# i arg for call
	CALL :INIT 	# call with 1 argument on stack

	LOAD R1		# i
	LOAD R0		# n
	LT 			# i < n ?
	JPNZ :NEXT	# true, next

	LOAD R0
	LOAD R1
	EQ 			# i = n ?
	JPNZ :NEXT	# true, next

	HALT
